version: '3'

services:
  # Сервис для приложения Spring Boot
  spring-app:
    image: checkpoint-manager:${PROJECT_VERSION}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
      - avatars-storage
    volumes:
      - ./logs:/logs # Монтирование локальной директории для логов
    environment:
      - LOGGING_CONFIG=classpath:logback-local-docker.xml # Для запуска с Docker
      - LOG_PATH=/logs
      - DB_URL=jdbc:postgresql://postgres-db:5432/chpmanDB
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/chpmanDB
      - SPRING_DATASOURCE_USERNAME=chpman
      - SPRING_DATASOURCE_PASSWORD=chpmanPass%
      - SPRING_DATA_REDIS_HOST=redis-cache #check
      - SPRING_DATA_REDIS_PORT=6379 #check
      - SPRING_DATA_REDIS_PASSWORD=admin #check
      - AVATAR_STORAGE_PATH=/avatars
      - TZ=UTC
      - JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_ENCRYPTOR_PASSWORD}

  # Сервис для базы данных PostgreSQL
  postgres-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=chpmanDB
      - POSTGRES_USER=chpman
      - POSTGRES_PASSWORD=chpmanPass%
      - TZ=UTC

  #Сервис для кеширования в Redis
  redis-cache:
    container_name: redis-cache
    hostname: redis-cache
    image: redis:latest
    ports:
      - "6379:6379"
    restart: on-failure
    command: redis-server --requirepass admin

  # Сервис для хранения аватаров
  avatars-storage:
    image: nginx:latest
    volumes:
      - ./avatars:/usr/share/nginx/html:ro
    ports:
      - "8081:80"
    environment:
      - TZ=UTC
